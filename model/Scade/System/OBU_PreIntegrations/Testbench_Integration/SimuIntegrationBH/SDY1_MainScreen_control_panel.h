/*********************************************************
 **
 ** File  SDY1_MainScreen_control_panel.h.cosimu
 **
 ** Specification File:  D:\MD\model\Scade\System\OBU_PreIntegrations\DebugPanel\MainScreen.rgfx
 **
 ** Automatically generated by SCADE RP Simu
 ** Version 6.6a i1
 **
 ** Date of generation: 2015-11-20T14:28:51
 ** Command line: ScadeRPSimu.exe -outdir D:\MD\model\Scade\System\OBU_PreIntegrations\Testbench_Integration\SimuIntegrationBH\SDY1_MainScreen\Code -prefix SDY1_MainScreen_ D:\MD\model\Scade\System\OBU_PreIntegrations\DebugPanel\MainScreen.rgfx C:\Program Files\Esterel Technologies\SCADE R16.1\SCADE LifeCycle\Rapid Prototyper\Widgets\Common\textures\Widgets_textures.stt C:\Program Files\Esterel Technologies\SCADE R16.1\SCADE LifeCycle\Rapid Prototyper\Widgets\Common\Widgets_fonts.sft D:\MD\model\Scade\System\OBU_PreIntegrations\DebugPanel\colorTable.sct C:\Program Files\Esterel Technologies\SCADE R16.1\SCADE LifeCycle\Rapid Prototyper\Widgets\Common\Widgets_line_width.swt C:\Program Files\Esterel Technologies\SCADE R16.1\SCADE LifeCycle\Rapid Prototyper\Widgets\Common\Widgets_line_stipple.sst
 *********************************************************/

#ifndef _SDY1_MAINSCREEN_CONTROL_PANEL_H_COSIMU
#define _SDY1_MAINSCREEN_CONTROL_PANEL_H_COSIMU

#include "sgl_types.h"

/* Variables and Accessors */
#ifndef SDY1_MainScreen_control_panel_G_positionCounter
#define SDY1_MainScreen_control_panel_G_positionCounter(_C_) ((_C_)->positionCounter)
#define SDY1_MainScreen_control_panel_S_positionCounter(_C_,_V_) (_C_)->positionCounter = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_positionCounter */
#ifndef SDY1_MainScreen_control_panel_G_velocity
#define SDY1_MainScreen_control_panel_G_velocity(_C_) ((_C_)->velocity)
#define SDY1_MainScreen_control_panel_S_velocity(_C_,_V_) (_C_)->velocity = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_velocity */
#ifndef SDY1_MainScreen_control_panel_G_timestamp
#define SDY1_MainScreen_control_panel_G_timestamp(_C_) ((_C_)->timestamp)
#define SDY1_MainScreen_control_panel_S_timestamp(_C_,_V_) (_C_)->timestamp = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_timestamp */
#ifndef SDY1_MainScreen_control_panel_G_velocityGraph
#define SDY1_MainScreen_control_panel_G_velocityGraph(_C_) ((_C_)->velocityGraph)
#define SDY1_MainScreen_control_panel_S_velocityGraph(_C_,_V_) (_C_)->velocityGraph = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_velocityGraph */
#ifndef SDY1_MainScreen_control_panel_G_trainPositionNominal
#define SDY1_MainScreen_control_panel_G_trainPositionNominal(_C_) ((_C_)->trainPositionNominal)
#define SDY1_MainScreen_control_panel_S_trainPositionNominal(_C_,_V_) (_C_)->trainPositionNominal = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_trainPositionNominal */
#ifndef SDY1_MainScreen_control_panel_G_trainPositionMax
#define SDY1_MainScreen_control_panel_G_trainPositionMax(_C_) ((_C_)->trainPositionMax)
#define SDY1_MainScreen_control_panel_S_trainPositionMax(_C_,_V_) (_C_)->trainPositionMax = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_trainPositionMax */
#ifndef SDY1_MainScreen_control_panel_G_trainPositionMin
#define SDY1_MainScreen_control_panel_G_trainPositionMin(_C_) ((_C_)->trainPositionMin)
#define SDY1_MainScreen_control_panel_S_trainPositionMin(_C_,_V_) (_C_)->trainPositionMin = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_trainPositionMin */
#ifndef SDY1_MainScreen_control_panel_G_serviceBrake
#define SDY1_MainScreen_control_panel_G_serviceBrake(_C_) ((_C_)->serviceBrake)
#define SDY1_MainScreen_control_panel_S_serviceBrake(_C_,_V_) (_C_)->serviceBrake = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_serviceBrake */
#ifndef SDY1_MainScreen_control_panel_G_emergencyBrake
#define SDY1_MainScreen_control_panel_G_emergencyBrake(_C_) ((_C_)->emergencyBrake)
#define SDY1_MainScreen_control_panel_S_emergencyBrake(_C_,_V_) (_C_)->emergencyBrake = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_emergencyBrake */
#ifndef SDY1_MainScreen_control_panel_G_permittedSpeed
#define SDY1_MainScreen_control_panel_G_permittedSpeed(_C_) ((_C_)->permittedSpeed)
#define SDY1_MainScreen_control_panel_S_permittedSpeed(_C_,_V_) (_C_)->permittedSpeed = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_permittedSpeed */
#ifndef SDY1_MainScreen_control_panel_G_interventionSpeed
#define SDY1_MainScreen_control_panel_G_interventionSpeed(_C_) ((_C_)->interventionSpeed)
#define SDY1_MainScreen_control_panel_S_interventionSpeed(_C_,_V_) (_C_)->interventionSpeed = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_interventionSpeed */
#ifndef SDY1_MainScreen_control_panel_G_tractionCutOff
#define SDY1_MainScreen_control_panel_G_tractionCutOff(_C_) ((_C_)->tractionCutOff)
#define SDY1_MainScreen_control_panel_S_tractionCutOff(_C_,_V_) (_C_)->tractionCutOff = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_tractionCutOff */
#ifndef SDY1_MainScreen_control_panel_G_afbActive
#define SDY1_MainScreen_control_panel_G_afbActive(_C_) ((_C_)->afbActive)
#define SDY1_MainScreen_control_panel_S_afbActive(_C_,_V_) (_C_)->afbActive = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_afbActive */
#ifndef SDY1_MainScreen_control_panel_G_startDrive
#define SDY1_MainScreen_control_panel_G_startDrive(_C_) ((_C_)->startDrive)
#define SDY1_MainScreen_control_panel_S_startDrive(_C_,_V_) (_C_)->startDrive = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_startDrive */
#ifndef SDY1_MainScreen_control_panel_G_reset
#define SDY1_MainScreen_control_panel_G_reset(_C_) ((_C_)->reset)
#define SDY1_MainScreen_control_panel_S_reset(_C_,_V_) (_C_)->reset = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_reset */
#ifndef SDY1_MainScreen_control_panel_G_criticalFailure
#define SDY1_MainScreen_control_panel_G_criticalFailure(_C_) ((_C_)->criticalFailure)
#define SDY1_MainScreen_control_panel_S_criticalFailure(_C_,_V_) (_C_)->criticalFailure = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_criticalFailure */
#ifndef SDY1_MainScreen_control_panel_G_direction
#define SDY1_MainScreen_control_panel_G_direction(_C_) ((_C_)->direction)
#define SDY1_MainScreen_control_panel_S_direction(_C_,_V_) (_C_)->direction = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_direction */
#ifndef SDY1_MainScreen_control_panel_G_initialPosition
#define SDY1_MainScreen_control_panel_G_initialPosition(_C_) ((_C_)->initialPosition)
#define SDY1_MainScreen_control_panel_S_initialPosition(_C_,_V_) (_C_)->initialPosition = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_initialPosition */
#ifndef SDY1_MainScreen_control_panel_G_openDesk
#define SDY1_MainScreen_control_panel_G_openDesk(_C_) ((_C_)->openDesk)
#define SDY1_MainScreen_control_panel_S_openDesk(_C_,_V_) (_C_)->openDesk = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_openDesk */
#ifndef SDY1_MainScreen_control_panel_G_targetSpeed
#define SDY1_MainScreen_control_panel_G_targetSpeed(_C_) ((_C_)->targetSpeed)
#define SDY1_MainScreen_control_panel_S_targetSpeed(_C_,_V_) (_C_)->targetSpeed = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_targetSpeed */
#ifndef SDY1_MainScreen_control_panel_G_brake
#define SDY1_MainScreen_control_panel_G_brake(_C_) ((_C_)->brake)
#define SDY1_MainScreen_control_panel_S_brake(_C_,_V_) (_C_)->brake = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_brake */
#ifndef SDY1_MainScreen_control_panel_G_traction
#define SDY1_MainScreen_control_panel_G_traction(_C_) ((_C_)->traction)
#define SDY1_MainScreen_control_panel_S_traction(_C_,_V_) (_C_)->traction = (_V_)
#endif /* SDY1_MainScreen_control_panel_G_traction */

/* Context for object control_panel */
typedef struct SDY1_MainScreen_typ_control_panel
{
  /* declaration of variables */
  /* ---------------------------inputs--------------------------- */
  SGLfloat positionCounter;
  SGLfloat velocity;
  SGLfloat timestamp;
  SGLfloat velocityGraph;
  SGLfloat trainPositionNominal;
  SGLfloat trainPositionMax;
  SGLfloat trainPositionMin;
  SGLbool serviceBrake;
  SGLbool emergencyBrake;
  SGLfloat permittedSpeed;
  SGLfloat interventionSpeed;
  SGLbool tractionCutOff;
  SGLbool afbActive;
  /* ---------------------------outputs--------------------------- */
  SGLbool startDrive;
  SGLbool reset;
  SGLbool criticalFailure;
  SGLint32 direction;
  SGLfloat initialPosition;
  SGLbool openDesk;
  SGLfloat targetSpeed;
  SGLfloat brake;
  SGLfloat traction;
} SDY1_MainScreen_typ_control_panel;

#endif /* _SDY1_MAINSCREEN_CONTROL_PANEL_H_COSIMU */

/*********************************************************
 ** End of file
 ** End of generation: 2015-11-20T14:28:51
 *********************************************************/

